name: Build and Test

on:
  pull_request:
    branches:
      - '**'
    paths:
      - 'cs-cos-backend/**'
      - 'cs-ses-backend/**'
      - 'cs-main-frontend/**'
      - 'tc-main-frontend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (stage/prod)'
        required: true

jobs:
  changes_filter:
    runs-on: ubuntu-latest
    outputs:
      cos: ${{ steps.filter.outputs.cos }}
      ses: ${{ steps.filter.outputs.ses }}
      vue: ${{ steps.filter.outputs.vue }}
      angular: ${{ steps.filter.outputs.angular }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            cos:
              - 'cs-cos-backend/**'
            ses:
              - 'cs-ses-backend/**'
            vue:
              - 'cs-main-frontend/**'
            angular:
              - 'tc-main-frontend/**'

  build_cos_backend:
    runs-on: ubuntu-latest
    needs: changes_filter
    if: needs.changes_filter.outputs.cos == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set script permissions
        run: chmod +x ./backend-libs/filter-generation/build_and_install_backend_libs.sh

      - name: Install backend libraries
        run: ./backend-libs/filter-generation/build_and_install_backend_libs.sh

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Build with Maven (cs-cos-backend)
        run: mvn -B -e package --file cs-cos-backend/pom.xml

  build_ses_backend:
    runs-on: ubuntu-latest
    needs: changes_filter
    if: needs.changes_filter.outputs.ses == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Build with Maven (cs-ses-backend)
        run: mvn -B -e package --file cs-ses-backend/pom.xml

  build_vue_app:
    runs-on: ubuntu-latest
    needs: changes_filter
    if: needs.changes_filter.outputs.vue == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Build Vue app
        run: |
          cd cs-main-frontend
          npm ci
          npm run build

  build_angular_app:
    runs-on: ubuntu-latest
    needs: changes_filter
    if: needs.changes_filter.outputs.angular == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Build Angular app
        run: |
          cd tc-main-frontend
          npm ci
          npm run build

  deploy_stage:
    runs-on: ubuntu-latest
    needs: [build_cos_backend, build_ses_backend, build_vue_app, build_angular_app]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'stage'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Stage
        run: ./deploy.sh stage  # assuming 'deploy.sh' is your deployment script

  deploy_prod:
    runs-on: ubuntu-latest
    needs: [build_cos_backend, build_ses_backend, build_vue_app, build_angular_app]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Prod
        run: ./deploy.sh prod  # assuming 'deploy.sh' is your deployment script